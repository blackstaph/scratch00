---
# playbook: get_spp_password.yml
# Usage (examples):
# 1) Provide API key:
# ansible-playbook -i localhost, get_spp_password.yml \
#   -e "host=safeguard-api-pp.schwab.com" \
#   -e "cacert=/export/home/.../CA_Bundle_Prod_1.cer" \
#   -e "cert=/export/home/.../AD00008512.prePROD.safeguard.cert.pem" \
#   -e "key=/export/home/.../AD00008512.prePROD.safeguard.pkey.pem" \
#   -e "spp_credential_apikey=142dq3LuojfLKEiVvx0/..." 
#
# 2) Derive API key from system+account:
# ansible-playbook -i localhost, get_spp_password.yml \
#   -e "host=safeguard-api-pp.schwab.com" \
#   -e "cacert=/export/home/.../CA_Bundle_Prod_1.cer" \
#   -e "cert=/export/home/.../AD00008512.prePROD.safeguard.cert.pem" \
#   -e "key=/export/home/.../AD00008512.prePROD.safeguard.pkey.pem" \
#   -e "spp_credential_apikey=" \
#   -e "system=CSDevExtDomain" \
#   -e "account=svc.aap_spe_win" \
#   -e "spp_registration_index=0"
#
# The playbook returns the password in 'my_password' (debug output suppressed with no_log).
---

- name: SPP get-password playbook
  hosts: localhost
  gather_facts: false

  vars:
    # expected to be provided via -e on CLI (examples above)
    host: ""
    cert: ""
    key: ""
    cacert: ""
    spp_credential_apikey: ""   # if empty, playbook will attempt discovery via system+account
    system: ""                 # used only when spp_credential_apikey is empty
    account: ""                # used only when spp_credential_apikey is empty
    spp_registration_index: 0  # optional; default 0

  tasks:
    - name: Build a2a connection dict (original vendor key names)
      set_fact:
        a2apasswordconnectioninfo:
          spp_appliance: "{{ host }}"
          spp_certificate_file: "{{ cert }}"
          spp_certificate_key: "{{ key }}"
          spp_tls_cert: "{{ cacert }}"
          spp_credential_type: password
          spp_validate_certs: true

    - name: Resolve ApiKey or set up discovery args
      set_fact:
        _lookup_kwargs: >-
          {{
            {
              'a2aconnection': a2apasswordconnectioninfo
            }
            | combine(
                ({} if spp_credential_apikey|length > 0 else {
                  'spp_systemname': (system if system|length > 0 else None),
                  'spp_username':  (account if account|length > 0 else None),
                  'spp_registration_index': (spp_registration_index | int)
                })
              )
          }}
      vars:
        # ensure empty strings become null in the discovery dict so the plugin can validate presence
        _tmp_system: "{{ system | default('') }}"
        _tmp_account: "{{ account | default('') }}"

    - name: Get the account password (use ApiKey if provided; otherwise discovery)
      set_fact:
        my_password: >-
          {{
            lookup(
              'oneidentity.safeguardcollection.safeguardcredentials',
              spp_credential_apikey,
              **_lookup_kwargs
            )
          }}
      no_log: true

    - name: Show that password was retrieved (value hidden because no_log=true)
      debug:
        msg: "Password retrieved and stored in variable 'my_password'."
